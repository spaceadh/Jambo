{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Jambo Programming Language",
    "scopeName": "source.jb",
    "fileTypes": [
        "jb"
    ],
    "patterns": [
        {
            "include": "#linecomments"
        },
        {
            "include": "#blockcomments"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#punctuation"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#constant"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#identifiers"
        }
    ],
    "repository": {
        "linecomments": {
            "name": "comment.line.double-slash.jambo",
            "match": "(//).*$\n?",
            "captures": {
                "1": {
                    "name": "punctuation.definition.comment.jambo"
                }
            }
        },
        "blockcomments": {
            "name": "comment.block.jambo",
            "begin": "/\\*",
            "end": "\\*/",
            "captures": {
                "0": {
                    "name": "punctuation.definition.comment.jambo"
                }
            }
        },
        "numbers": {
            "name": "constant.numeric.jambo",
            "match": "\\b[0-9]+(\\.[0-9]+)?\\b"
        },
        "constant": {
            "name": "constant.language.jambo",
            "match": "\\b(kweli|sikweli)\\b"
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.jambo",
                    "match": "\\b(\\+|\\-|%|\\*|\\/|\\^)\\b"
                },
                {
                    "name": "keyword.operator.logical.jambo",
                    "match": "\\b(==|<=|>=|<|>|&&|\\|\\|)\\b"
                },
                {
                    "name": "keyword.operator.assignment.jambo",
                    "match": "\\b(=|:)\\b"
                },
                {
                    "name": "punctuation.accessor.jambo",
                    "match": "\\."
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "name": "punctuation.separator",
                    "match": ","
                },
                {
                    "include": "#groups"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "storage.type.function.jambo",
                    "match": "\\b(unda|andika|idadi|jumla|yamwisho|sukuma|jaza|aina|fungua)\\b"
                },
                {
                    "name": "storage.type.jambo",
                    "match": "\\bfanya\\b"
                },
                {
                    "name": "keyword.control.jambo",
                    "match": "\\b(kama|au|sivyo|wakati|rudisha|vunja|endelea|tupu|ktk|kwa|badili|ikiwa|kawaida|tumia)\\b"
                },
                {
                    "name": "support.function.jambo",
                    "match": "\\b(os|muda)\\b"
                }
            ]
        },
        "identifiers": {
            "patterns": [
                {
                    "name": "meta.functioncall.jambo",
                    "match": "\\b([_A-Za-z][_A-Za-z0-9]*)\\b(?=\\()",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.jambo"
                        }
                    }
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.jambo",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.jambo",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.jambo",
                    "begin": "\\'",
                    "end": "\\'",
                    "patterns": [
                        {
                            "name": "constant.character.escape.jambo",
                            "match": "\\\\."
                        }
                    ]
                }
            ]
        }
    }
}